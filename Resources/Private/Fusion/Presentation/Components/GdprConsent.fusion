prototype(Jonnitto.PrettyEmbed:Presentation.GdprConsent) < prototype(Neos.Fusion:Component) {
    @propTypes {
        href = ${PropTypes.string}
        embedHref = ${PropTypes.string}
        alpineJsValues = ${PropTypes.boolean}
    }

    alpineJsValues = false

    @private {
        embedHref = ${props.embedHref || props.href}
        href = ${props.href || props.embedHref}
    }

    renderer = afx`
       <div x-prettyembedconsent x-cloak class="jonnitto-prettyembed-gdpr">
            <div class="jonnitto-prettyembed-gdpr__panel">
                <p>{Translation.translate('gdprMessage', 'While playing this video, external contents are loaded and you may be tracked by the inital content provider.', [], 'Main', 'Jonnitto.PrettyEmbedPresentation')}</p>
                <div>
                    <a
                        @if={private.href}
                        x-prettyembedpopup={props.alpineJsValues ? null : private.embedHref}
                        "x-prettyembedpopup.dynamic"={props.alpineJsValues ? private.embedHref : null}
                        href={props.alpineJsValues ? null : private.href}
                        :href={props.alpineJsValues ? private.href : null}
                        class={BEM.modifier('jonnitto-prettyembed-gdpr__button', 'external')}
                    >
                        {Translation.translate('gdprMessageNewWindow', 'Open in new window', [], 'Main', 'Jonnitto.PrettyEmbedPresentation')}
                    </a>
                    <button
                        x-prettyembedconsent:accept
                        type="button"
                        class={BEM.modifier('jonnitto-prettyembed-gdpr__button', 'accept')}
                     >
                        {Translation.translate('gdprMessageAccept', 'OK', [], 'Main', 'Jonnitto.PrettyEmbedPresentation')}
                    </button>
                </div>
            </div>
        </div>
    `
}
